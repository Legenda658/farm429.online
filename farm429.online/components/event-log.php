<?php
require_once __DIR__ . '/../config/database.php';
if (session_status() === PHP_SESSION_NONE) {
    session_start();
}
$isGuest = !isset($_SESSION['user_id']);
$user_id = $isGuest ? 1 : $_SESSION['user_id'];
$guestEvents = [];
if ($isGuest) {
    $guestEvents = [
        [
            'id' => 1001,
            'user_id' => 1,
            'event_type' => 'temperature',
            'event_description' => '–¢—Ä–µ–≤–æ–≥–∞: –ü–æ–≤—ã—à–µ–Ω–∏–µ —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—ã –≤—ã—à–µ –¥–æ–ø—É—Å—Ç–∏–º–æ–≥–æ –ø—Ä–µ–¥–µ–ª–∞ (30.5¬∞C)',
            'created_at' => date('Y-m-d H:i:s', strtotime('-2 hours'))
        ],
        [
            'id' => 1002,
            'user_id' => 1,
            'event_type' => 'humidity',
            'event_description' => '–¢—Ä–µ–≤–æ–≥–∞: –°–Ω–∏–∂–µ–Ω–∏–µ –≤–ª–∞–∂–Ω–æ—Å—Ç–∏ –Ω–∏–∂–µ –¥–æ–ø—É—Å—Ç–∏–º–æ–≥–æ –ø—Ä–µ–¥–µ–ª–∞ (35%)',
            'created_at' => date('Y-m-d H:i:s', strtotime('-5 hours'))
        ],
        [
            'id' => 1003,
            'user_id' => 1,
            'event_type' => 'device',
            'event_description' => '–¢—Ä–µ–≤–æ–≥–∞: –û—Ç–∫–ª—é—á–µ–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã –ø–æ–ª–∏–≤–∞',
            'created_at' => date('Y-m-d H:i:s', strtotime('-1 day'))
        ],
        [
            'id' => 1004,
            'user_id' => 1,
            'event_type' => 'device',
            'event_description' => '–°–∏—Å—Ç–µ–º–∞ –∑–∞–ø—É—â–µ–Ω–∞',
            'created_at' => date('Y-m-d H:i:s', strtotime('-1 hour'))
        ],
        [
            'id' => 1005,
            'user_id' => 1,
            'event_type' => 'lighting',
            'event_description' => '–£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω —Ä–µ–∂–∏–º –æ—Å–≤–µ—â–µ–Ω–∏—è: 16 —á–∞—Å–æ–≤ –≤ —Å—É—Ç–∫–∏',
            'created_at' => date('Y-m-d H:i:s', strtotime('-4 hours'))
        ],
        [
            'id' => 1006,
            'user_id' => 1,
            'event_type' => 'device',
            'event_description' => '–ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∞ –∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä–∞',
            'created_at' => date('Y-m-d H:i:s', strtotime('-2 days'))
        ],
        [
            'id' => 1007,
            'user_id' => 1,
            'event_type' => 'device',
            'event_description' => '–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω–æ–µ —Å–æ–±—ã—Ç–∏–µ: –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ –≤–ª–∞–∂–Ω–æ—Å—Ç—å 55%',
            'created_at' => date('Y-m-d H:i:s', strtotime('-3 hours'))
        ],
        [
            'id' => 1008,
            'user_id' => 1,
            'event_type' => 'device',
            'event_description' => '–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω–æ–µ —Å–æ–±—ã—Ç–∏–µ: –í–∫–ª—é—á–µ–Ω —ç–∫–æ–Ω–æ–º–∏—á–Ω—ã–π —Ä–µ–∂–∏–º',
            'created_at' => date('Y-m-d H:i:s', strtotime('-8 hours'))
        ],
        [
            'id' => 1009,
            'user_id' => 1,
            'event_type' => 'device',
            'event_description' => '–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω–æ–µ —Å–æ–±—ã—Ç–∏–µ: –ó–∞–≤–µ—Ä—à–µ–Ω —Ü–∏–∫–ª –ø–æ–ª–∏–≤–∞',
            'created_at' => date('Y-m-d H:i:s', strtotime('-2 days 3 hours'))
        ]
    ];
}
if ($isGuest) {
    $events = $guestEvents;
} else {
    $stmt = $pdo->prepare("SELECT * FROM event_log WHERE user_id = ? ORDER BY created_at DESC");
    $stmt->execute([$user_id]);
    $events = $stmt->fetchAll(PDO::FETCH_ASSOC);
}
$filteredEvents = array_filter($events, function($event) {
    $type = $_GET['type'] ?? 'all';
    $period = $_GET['period'] ?? 'all';
    if ($type !== 'all' && $event['event_type'] !== $type) {
        return false;
    }
    if ($period !== 'all') {
        $eventDate = new DateTime($event['created_at']);
        $now = new DateTime();
        $diff = $now->diff($eventDate);
        if ($period === 'day' && $diff->days > 1) {
            return false;
        } elseif ($period === 'week' && $diff->days > 7) {
            return false;
        } elseif ($period === 'month' && $diff->days > 30) {
            return false;
        }
    }
    return true;
});
?>
<div class="accordion">
    <div class="accordion-header" onclick="this.nextElementSibling.classList.toggle('active'); this.querySelector('.accordion-icon').classList.toggle('active');" style="background-color: var(--primary-color); color: white;">
        <span>–ñ—É—Ä–Ω–∞–ª —Å–æ–±—ã—Ç–∏–π üìú</span>
        <span class="accordion-icon">‚ñº</span>
    </div>
    <div class="accordion-content" itemscope itemtype="https://schema.org/EventSeries">
        <meta itemprop="name" content="–ñ—É—Ä–Ω–∞–ª —Å–æ–±—ã—Ç–∏–π —É–º–Ω–æ–π —Ñ–µ—Ä–º—ã">
        <meta itemprop="description" content="–ò—Å—Ç–æ—Ä–∏—è —Å–æ–±—ã—Ç–∏–π –∏ —Ç—Ä–µ–≤–æ–≥ —É–º–Ω–æ–π —Ñ–µ—Ä–º—ã –§–∏—Ç–æ–î–æ–º–∏–∫">
        <div class="event-log-container">
            <?php if ($isGuest): ?>
            <div class="guest-notice">
                <p>–í—ã –ø—Ä–æ—Å–º–∞—Ç—Ä–∏–≤–∞–µ—Ç–µ –¥–∞–Ω–Ω—ã–µ –≤ —Ä–µ–∂–∏–º–µ –≥–æ—Å—Ç—è. –î–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ –ø–æ–ª–Ω–æ–º—É –∂—É—Ä–Ω–∞–ª—É —Å–æ–±—ã—Ç–∏–π –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ <a href="authentication/login.php">–∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞—Ç—å—Å—è</a>.</p>
            </div>
            <?php endif; ?>
            <div class="event-filters">
                <div class="event-type-label">–¢–∏–ø —Å–æ–±—ã—Ç–∏—è:</div>
                <button class="filter-button" onclick="setFilter('all')" aria-label="–ü–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ —Ç–∏–ø—ã —Å–æ–±—ã—Ç–∏–π" title="–ü–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ —Ç–∏–ø—ã —Å–æ–±—ã—Ç–∏–π">–í—Å–µ</button>
                <button class="filter-button" onclick="setFilter('alarm')" aria-label="–ü–æ–∫–∞–∑–∞—Ç—å —Ç–æ–ª—å–∫–æ —Ç—Ä–µ–≤–æ–≥–∏" title="–ü–æ–∫–∞–∑–∞—Ç—å —Ç–æ–ª—å–∫–æ —Å–æ–±—ã—Ç–∏—è —Ç–∏–ø–∞ '–¢—Ä–µ–≤–æ–≥–∞'">–¢—Ä–µ–≤–æ–≥–∏</button>
                <button class="filter-button" onclick="setFilter('system')" aria-label="–ü–æ–∫–∞–∑–∞—Ç—å —Ç–æ–ª—å–∫–æ —Å–∏—Å—Ç–µ–º–Ω—ã–µ —Å–æ–±—ã—Ç–∏—è" title="–ü–æ–∫–∞–∑–∞—Ç—å —Ç–æ–ª—å–∫–æ —Å–∏—Å—Ç–µ–º–Ω—ã–µ —Å–æ–±—ã—Ç–∏—è">–°–∏—Å—Ç–µ–º–∞</button>
                <button class="filter-button" onclick="setFilter('info')" aria-label="–ü–æ–∫–∞–∑–∞—Ç—å —Ç–æ–ª—å–∫–æ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω—ã–µ —Å–æ–±—ã—Ç–∏—è" title="–ü–æ–∫–∞–∑–∞—Ç—å —Ç–æ–ª—å–∫–æ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω—ã–µ —Å–æ–±—ã—Ç–∏—è">–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è</button>
            </div>
            <div class="event-period">
                <div class="period-label">–ü–µ—Ä–∏–æ–¥:</div>
                <button class="period-button" onclick="setPeriod('day')" aria-label="–ü–æ–∫–∞–∑–∞—Ç—å —Å–æ–±—ã—Ç–∏—è –∑–∞ –¥–µ–Ω—å" title="–ü–æ–∫–∞–∑–∞—Ç—å —Å–æ–±—ã—Ç–∏—è –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 24 —á–∞—Å–∞">–î–µ–Ω—å</button>
                <button class="period-button" onclick="setPeriod('week')" aria-label="–ü–æ–∫–∞–∑–∞—Ç—å —Å–æ–±—ã—Ç–∏—è –∑–∞ –Ω–µ–¥–µ–ª—é" title="–ü–æ–∫–∞–∑–∞—Ç—å —Å–æ–±—ã—Ç–∏—è –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 7 –¥–Ω–µ–π">–ù–µ–¥–µ–ª—è</button>
                <button class="period-button" onclick="setPeriod('month')" aria-label="–ü–æ–∫–∞–∑–∞—Ç—å —Å–æ–±—ã—Ç–∏—è –∑–∞ –º–µ—Å—è—Ü" title="–ü–æ–∫–∞–∑–∞—Ç—å —Å–æ–±—ã—Ç–∏—è –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 30 –¥–Ω–µ–π">–ú–µ—Å—è—Ü</button>
            </div>
            <div class="event-list" itemprop="events" itemscope itemtype="https://schema.org/ItemList">
                <meta itemprop="numberOfItems" content="<?php echo count($filteredEvents); ?>">
                <?php if (empty($filteredEvents)): ?>
                    <div class="event-item" style="text-align: center; padding: 20px; background-color: var(--background-color);">
                        –ù–µ—Ç —Å–æ–±—ã—Ç–∏–π –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è.
                    </div>
                <?php else: ?>
                    <?php foreach ($filteredEvents as $index => $event): ?>
                        <div class="event-item <?php echo $event['event_type']; ?>" 
                             style="background-color: <?php 
                            switch($event['event_type']) {
                                case 'temperature':
                                case 'humidity':
                                    echo 'rgba(220, 53, 69, 0.85)';
                                    break;
                                case 'device':
                                case 'lighting':
                                    echo 'rgba(13, 110, 253, 0.85)';
                                    break;
                                default:
                                    echo 'rgba(25, 135, 84, 0.85)';
                            }
                            ?>; color: white; margin-bottom: 10px; padding: 10px; border-radius: 5px; box-shadow: 0 2px 4px rgba(0,0,0,0.1);"
                             itemprop="itemListElement" itemscope itemtype="https://schema.org/Event">
                            <meta itemprop="position" content="<?php echo $index + 1; ?>">
                            <meta itemprop="url" content="https://farm429.online/index.php#event<?php echo $event['id']; ?>">
                            <div class="event-time" itemprop="startDate" content="<?php echo date('c', strtotime($event['created_at'])); ?>">
                                <?php echo date('d.m.Y H:i:s', strtotime($event['created_at'])); ?>
                            </div>
                            <div class="event-message" itemprop="name"><?php echo $event['event_description']; ?></div>
                        </div>
                    <?php endforeach; ?>
                <?php endif; ?>
            </div>
            <div class="event-actions" style="margin-top: 20px; text-align: right;">
                <button class="clear-button" onclick="clearEventLog()" <?php echo $isGuest ? 'disabled title="–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ –≤ –≥–æ—Å—Ç–µ–≤–æ–º —Ä–µ–∂–∏–º–µ"' : ''; ?> 
                        style="background-color: rgba(220, 53, 69, 0.85); color: white; border: none; padding: 8px 15px; border-radius: 5px; cursor: pointer; <?php echo $isGuest ? 'opacity: 0.5; cursor: not-allowed;' : ''; ?>"
                        aria-label="–û—á–∏—Å—Ç–∏—Ç—å –∂—É—Ä–Ω–∞–ª —Å–æ–±—ã—Ç–∏–π" 
                        title="–£–¥–∞–ª–∏—Ç—å –≤—Å–µ –∑–∞–ø–∏—Å–∏ –∏–∑ –∂—É—Ä–Ω–∞–ª–∞ —Å–æ–±—ã—Ç–∏–π">–û—á–∏—Å—Ç–∏—Ç—å –∂—É—Ä–Ω–∞–ª</button>
            </div>
            <meta itemprop="dateModified" content="<?php echo date('c'); ?>">
        </div>
    </div>
</div>
<!-- –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –¥–ª—è —à–∞—Ä–∏–Ω–≥–∞ -->
<div id="shareModal" class="modal" role="dialog" aria-labelledby="shareModalTitle" aria-modal="true">
    <div class="modal-content">
        <span class="close" aria-label="–ó–∞–∫—Ä—ã—Ç—å –æ–∫–Ω–æ" title="–ó–∞–∫—Ä—ã—Ç—å">&times;</span>
        <h2 id="shareModalTitle">–ü–æ–¥–µ–ª–∏—Ç—å—Å—è –¥–æ—Å—Ç—É–ø–æ–º</h2>
        <div class="share-options">
            <div class="share-option">
                <h3>–ö–æ–¥ –¥–æ—Å—Ç—É–ø–∞</h3>
                <div class="share-input-container">
                    <label for="eventLogShareCode">–ö–æ–¥ –¥–æ—Å—Ç—É–ø–∞ –¥–ª—è –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–∏—è –≥–æ—Å—Ç–µ–≤–æ–≥–æ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞:</label>
                    <input type="text" id="eventLogShareCode" class="form-control share-input" readonly
                           aria-label="–ö–æ–¥ –¥–æ—Å—Ç—É–ø–∞ –¥–ª—è –≥–æ—Å—Ç—è" title="–ö–æ–¥ –¥–æ—Å—Ç—É–ø–∞ –¥–ª—è –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–∏—è –≥–æ—Å—Ç–µ–≤–æ–≥–æ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞">
                    <button class="copy-btn" onclick="copyText('eventLogShareCode')" aria-label="–ö–æ–ø–∏—Ä–æ–≤–∞—Ç—å –∫–æ–¥ –¥–æ—Å—Ç—É–ø–∞" title="–ö–æ–ø–∏—Ä–æ–≤–∞—Ç—å –∫–æ–¥ –≤ –±—É—Ñ–µ—Ä –æ–±–º–µ–Ω–∞">–ö–æ–ø–∏—Ä–æ–≤–∞—Ç—å</button>
                </div>
            </div>
            <div class="share-option">
                <h3>–°—Å—ã–ª–∫–∞ –¥–ª—è –≥–æ—Å—Ç—è</h3>
                <div class="share-input-container">
                    <label for="eventLogShareLink">–°—Å—ã–ª–∫–∞ –¥–ª—è –≥–æ—Å—Ç–µ–≤–æ–≥–æ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞:</label>
                    <input type="text" id="eventLogShareLink" class="form-control share-input" readonly
                           aria-label="–°—Å—ã–ª–∫–∞ –¥–ª—è –≥–æ—Å—Ç–µ–≤–æ–≥–æ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞" title="–°—Å—ã–ª–∫–∞ –¥–ª—è –≥–æ—Å—Ç–µ–≤–æ–≥–æ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –≤–∞—à–µ–π —Ñ–µ—Ä–º—ã">
                    <button class="copy-btn" onclick="copyText('eventLogShareLink')" aria-label="–ö–æ–ø–∏—Ä–æ–≤–∞—Ç—å —Å—Å—ã–ª–∫—É" title="–ö–æ–ø–∏—Ä–æ–≤–∞—Ç—å —Å—Å—ã–ª–∫—É –≤ –±—É—Ñ–µ—Ä –æ–±–º–µ–Ω–∞">–ö–æ–ø–∏—Ä–æ–≤–∞—Ç—å</button>
                </div>
            </div>
        </div>
    </div>
</div>
<style>
    .filter-button, .period-button {
        background-color: var(--primary-color);
        color: white;
        border: none;
        padding: 10px 20px;
        margin: 5px;
        border-radius: 20px;
        cursor: pointer;
        transition: background-color 0.3s;
        display: inline-block;
    }
    .filter-button.active, .period-button.active {
        background-color: var(--secondary-color);
    }
    .guest-notice {
        background-color: rgba(255, 193, 7, 0.2);
        border-left: 4px solid #ffc107;
        padding: 10px 15px;
        margin-bottom: 20px;
        border-radius: 4px;
    }
    .guest-notice p {
        margin: 0;
        color: var(--text-color, #555);
    }
    .guest-notice a {
        color: #007bff;
        text-decoration: none;
        font-weight: bold;
    }
    .guest-notice a:hover {
        text-decoration: underline;
    }
    /* –°—Ç–∏–ª–∏ –¥–ª—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–∏ */
    .copy-notification {
        position: fixed;
        top: 20px;
        right: 20px;
        background-color: #4CAF50;
        color: white;
        padding: 10px 20px;
        border-radius: 5px;
        z-index: 1100;
        animation: fadeInOut 2s ease-in-out;
    }
    @keyframes fadeInOut {
        0% { opacity: 0; transform: translateY(-20px); }
        20% { opacity: 1; transform: translateY(0); }
        80% { opacity: 1; transform: translateY(0); }
        100% { opacity: 0; transform: translateY(-20px); }
    }
</style>
<script>
    document.addEventListener('DOMContentLoaded', function() {
        document.querySelector('.filter-button[onclick="setFilter(\'all\')"]').classList.add('active');
        document.querySelector('.period-button[onclick="setPeriod(\'day\')"]').classList.add('active');
    });
    function setFilter(type) {
        document.querySelectorAll('.filter-button').forEach(btn => btn.classList.remove('active'));
        document.querySelector(`.filter-button[onclick="setFilter('${type}')"]`).classList.add('active');
        filterEvents(type, document.querySelector('.period-button.active').getAttribute('onclick').match(/setPeriod\('(.+?)'\)/)[1]);
    }
    function setPeriod(period) {
        document.querySelectorAll('.period-button').forEach(btn => btn.classList.remove('active'));
        document.querySelector(`.period-button[onclick="setPeriod('${period}')"]`).classList.add('active');
        filterEvents(document.querySelector('.filter-button.active').getAttribute('onclick').match(/setFilter\('(.+?)'\)/)[1], period);
    }
    function filterEvents(type, period) {
        const eventList = document.querySelector('.event-list');
        const events = <?php echo json_encode($events); ?>;
        const filteredEvents = events.filter(event => {
            if (type !== 'all') {
                switch(type) {
                    case 'alarm':
                        return ['temperature', 'humidity', 'device'].includes(event.event_type) && 
                               event.event_description.toLowerCase().includes('—Ç—Ä–µ–≤–æ–≥–∞');
                    case 'system':
                        return ['device', 'lighting'].includes(event.event_type) && 
                               !event.event_description.toLowerCase().includes('—Ç—Ä–µ–≤–æ–≥–∞');
                    case 'info':
                        return event.event_type === 'device' && 
                               (event.event_description.toLowerCase().includes('—Å–æ–±—ã—Ç–∏–µ') || 
                                event.event_description.toLowerCase().includes('—Ä–µ–∂–∏–º') ||
                                event.event_description.toLowerCase().includes('–∏–Ω—Ñ–æ—Ä–º–∞—Ü'));
                    default:
                        return false;
                }
            }
            return true;
        }).filter(event => {
            const eventDate = new Date(event.created_at);
            const now = new Date();
            const diff = Math.floor((now - eventDate) / (1000 * 60 * 60 * 24));
            switch(period) {
                case 'day':
                    return diff <= 1;
                case 'week':
                    return diff <= 7;
                case 'month':
                    return diff <= 30;
                default:
                    return true;
            }
        });
        if (filteredEvents.length === 0) {
            eventList.innerHTML = '<div class="event-item" style="text-align: center; padding: 20px; background-color: var(--background-color);">–ù–µ—Ç —Å–æ–±—ã—Ç–∏–π –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è.</div>';
        } else {
            eventList.innerHTML = filteredEvents.map(event => {
                let backgroundColor;
                if (event.event_description.toLowerCase().includes('—Ç—Ä–µ–≤–æ–≥–∞')) {
                    backgroundColor = 'rgba(220, 53, 69, 0.75)';
                } else if (['device', 'lighting'].includes(event.event_type) && 
                          !event.event_description.toLowerCase().includes('—Å–æ–±—ã—Ç–∏–µ') &&
                          !event.event_description.toLowerCase().includes('—Ä–µ–∂–∏–º') &&
                          !event.event_description.toLowerCase().includes('–∏–Ω—Ñ–æ—Ä–º–∞—Ü')) {
                    backgroundColor = 'rgba(13, 110, 253, 0.75)';
                } else {
                    backgroundColor = 'rgba(25, 135, 84, 0.75)';
                }
                return `
                    <div class="event-item ${event.event_type}" style="background-color: ${backgroundColor}; color: white; margin-bottom: 10px; padding: 10px; border-radius: 5px; box-shadow: 0 2px 4px rgba(0,0,0,0.1);">
                        <div class="event-time">${new Date(event.created_at).toLocaleString('ru-RU')}</div>
                        <div class="event-message">${event.event_description}</div>
                    </div>
                `;
            }).join('');
        }
    }
    function clearEventLog() {
        const isGuest = <?php echo $isGuest ? 'true' : 'false'; ?>;
        if (isGuest) {
            alert('–û—á–∏—Å—Ç–∫–∞ –∂—É—Ä–Ω–∞–ª–∞ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞ –≤ –≥–æ—Å—Ç–µ–≤–æ–º —Ä–µ–∂–∏–º–µ');
            return;
        }
        if (confirm('–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –æ—á–∏—Å—Ç–∏—Ç—å –∂—É—Ä–Ω–∞–ª —Å–æ–±—ã—Ç–∏–π? –≠—Ç–æ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–µ–ª—å–∑—è –æ—Ç–º–µ–Ω–∏—Ç—å.')) {
            fetch('/api/clear-event-log.php', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                }
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    document.querySelector('.event-list').innerHTML = '<div class="event-item" style="text-align: center; padding: 20px; background-color: var(--background-color);">–ù–µ—Ç —Å–æ–±—ã—Ç–∏–π –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è.</div>';
                    alert('–ñ—É—Ä–Ω–∞–ª —Å–æ–±—ã—Ç–∏–π —É—Å–ø–µ—à–Ω–æ –æ—á–∏—â–µ–Ω');
                } else {
                    alert('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—á–∏—Å—Ç–∫–µ –∂—É—Ä–Ω–∞–ª–∞: ' + data.message);
                }
            })
            .catch(error => {
                console.error('–û—à–∏–±–∫–∞:', error);
                alert('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—á–∏—Å—Ç–∫–µ –∂—É—Ä–Ω–∞–ª–∞');
            });
        }
    }
    function copyText(elementId) {
        const copyInput = document.getElementById(elementId);
        copyInput.select();
        document.execCommand('copy');
        const notification = document.createElement('div');
        notification.className = 'copy-notification';
        notification.textContent = '–°–∫–æ–ø–∏—Ä–æ–≤–∞–Ω–æ –≤ –±—É—Ñ–µ—Ä –æ–±–º–µ–Ω–∞';
        document.body.appendChild(notification);
        setTimeout(() => {
            notification.remove();
        }, 2000);
    }
</script>